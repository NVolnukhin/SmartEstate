# /opt/anaconda3/bin/python3 /Users/nikitavolnuhin/ghostbusters/parsers/main.py

import time
from os import getenv
import cianparser.cianparser as cp
from normalizer.normalizer import normalize
from flats_processor.processor import process_records
from actualpriceparser.actual_price_getter import get_actual_prices
from geodistance_calculator.infrastructure_info_processor import process_infrastructure_info
from graphhooper.process_calculating import process_time_calculating
from additionalinfoparser.parse_additional_info import parse_additional_info

db_params = {
        "dbname": getenv("DB_NAME"),
        "user": getenv("DB_USER"),
        "password": getenv("DB_PASSWORD"),
        "host": getenv("DB_HOST"),
        "port": getenv("DB_PORT"),
    }


districts_groups = [
    ['Щербинка', 'Коркино', 'Митино', 'Покровское-Стрешнево', 'Северное Тушино'],
    ['Строгино', 'Хорошево-Мневники', 'Щукино', 'Южное Тушино', 'Аэропорт'],
    ['Беговой', 'Бескудниковский', 'Войковский', 'Восточное Дегунино', 'Головинский'],
    ['Дмитровский', 'Западное Дегунино', 'Коптево', 'Левобережный', 'Молжаниновский'],
    ['Савеловский', 'Сокол', 'Тимирязевский', 'Ховрино', 'Хорошевский'],
    ['Алексеевский', 'Алтуфьевский', 'Бабушкинский', 'Бибирево', 'Бутырский'],
    ['Лианозово', 'Лосиноостровский', 'Марфино', 'Марьина роща', 'Останкинский'],
    ['Отрадное', 'Ростокино', 'Свиблово', 'Северное Медведково', 'Северный'],
    ['Южное Медведково', 'Ярославский', 'Вороновское', 'Киевский', 'Клёновское'],
    ['Краснопахорское', 'Михайлово-Ярцевское', 'Новофёдоровское', 'Первомайское', 'Роговское'],
    ['Троицк', 'Щаповское', 'Внуково', 'Дорогомилово', 'Крылатское'],
    ['Кунцево', 'Можайское', 'Ново-Переделкино', 'Очаково-Матвеевское', 'Проспект Вернадского'],
    ['Раменки', 'Солнцево', 'Тропарево-Никулино', 'Филевский парк', 'Фили-Давыдково'],
    ['Конезавод', 'Рублево-Архангельское', 'Сколково', 'Арбат', 'Басманный'],
    ['Замоскворечье', 'Красносельский', 'Мещанский', 'Пресненский', 'Таганский'],
    ['Тверской', 'Хамовники', 'Якиманка', 'Богородское', 'Вешняки'],
    ['Восточный', 'Восточное Измайлово', 'Гольяново', 'Ивановское', 'Измайлово'],
    ['Косино-Ухтомский', 'Метрогородок', 'Новогиреево', 'Новокосино', 'Перово'],
    ['Преображенское', 'Северное Измайлово', 'Соколиная гора', 'Сокольники', 'Академический'],
    ['Гагаринский', 'Зюзино', 'Коньково', 'Котловка', 'Ломоносовский'],
    ['Обручевский', 'Северное Бутово', 'Теплый Стан', 'Черемушки', 'Южное Бутово'],
    ['Ясенево', 'Бирюлево Восточное', 'Бирюлево Западное', 'Братеево', 'Даниловский'],
    ['Донской', 'Зябликово', 'Москворечье-Сабурово', 'Нагатино-Садовники', 'Нагатинский затон'],
    ['Нагорный', 'Орехово-Борисово Северное', 'Орехово-Борисово Южное', 'Царицыно', 'Чертаново Северное'],
    ['Чертаново Центральное', 'Чертаново Южное', 'Выхино-Жулебино', 'Капотня', 'Кузьминки'],
    ['Лефортово', 'Люблино', 'Марьино', 'Некрасовка', 'Нижегородский'],
    ['Печатники', 'Рязанский', 'Текстильщики', 'Южнопортовый']
]

"""
Запускаем парсер циана по группам районов из 5 штук.
Данные будут сохраняться в директорию, где находится main.py в файл flats_parse_result.csv
"""

i = 0
for district_group in districts_groups:
    i += 1
    print(f"Сбор данных о {i} группе районов: {district_group}")
    msk_parser = cp.CianParser(location="Москва")
    data = msk_parser.get_flats(deal_type="sale",
                                   rooms="all",
                                   with_saving_csv=True,
                                   with_extra_data=True,
                                   additional_settings={
                                        "object_type": "new",
                                        "author_type": "застройщик",
                                        "district": district_group,
                                        "start_page":1,
                                        "end_page": 54,
                                   })
    time.sleep(1000)

"""Очищаем полученный файл"""
normalize('/Users/nikitavolnuhin/ghostbusters/parsers/flats_parse_result.csv')

"""Добавляем квартиры и здания в БД"""
process_records(db_params)

"""Собираем актуальные цены на квартиры"""
get_actual_prices()

"""Находим ближайщую инфраструктуру"""
process_infrastructure_info()

"""Считаем время до объектов инфраструктур"""
process_time_calculating()

"""Находим фотографии и историю цен квартир"""
parse_additional_info()