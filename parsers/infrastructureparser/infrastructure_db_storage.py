import psycopg2
import csv
from psycopg2 import sql
from os import getenv
from dotenv import load_dotenv


def save_csv_to_postgresql(db_params, table_name, file_path):
    """Сохраняет данные из CSV файла в указанную таблицу PostgreSQL."""
    try:
        conn = psycopg2.connect(**db_params)
        cursor = conn.cursor()

        create_table_query = sql.SQL("""
            CREATE TABLE IF NOT EXISTS {table} (
                "Id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                "Name" TEXT NOT NULL,
                "Latitude" DOUBLE PRECISION NOT NULL,
                "Longitude" DOUBLE PRECISION NOT NULL
            )
        """).format(table=sql.Identifier(table_name))

        cursor.execute(create_table_query)

        truncate_query = sql.SQL("TRUNCATE TABLE {table} RESTART IDENTITY CASCADE").format(
            table=sql.Identifier(table_name))
        cursor.execute(truncate_query)


        insert_query = sql.SQL("""
            INSERT INTO {table} ("Name", "Latitude", "Longitude")
            VALUES (%s, %s, %s)
        """).format(table=sql.Identifier(table_name))

        with open(file_path, mode='r', encoding='utf-8') as csv_file:
            csv_reader = csv.DictReader(csv_file)
            row_count = 0

            for row in csv_reader:
                cursor.execute(insert_query, (
                    row['name'],
                    float(row['latitude']),
                    float(row['longitude'])
                ))
                row_count += 1
                # # for test
                # if row_count > 3:
                #     break

        conn.commit()
        print(f"Успешно сохранено {row_count} записей в таблицу {table_name}")
        return True

    except Exception as e:
        print(f"Ошибка при сохранении данных в PostgreSQL: {e}")
        conn.rollback()
        return False
    finally:
        if conn:
            conn.close()

def main():
    load_dotenv()
    db_params = {
        "dbname": getenv("DB_NAME"),
        "user": getenv("DB_USER"),
        "password": getenv("DB_PASSWORD"),
        "host": getenv("DB_HOST"),
        "port": getenv("DB_PORT"),
    }
    save_csv_to_postgresql(db_params, getenv("DB_SHOP_TABLE_NAME"), '../shop_parse_result.csv')
    save_csv_to_postgresql(db_params, getenv("DB_SCHOOL_TABLE_NAME"), '../school_parse_result.csv')
    save_csv_to_postgresql(db_params, getenv("DB_KINDERGARTEN_TABLE_NAME"), '../kindergarten_parse_result.csv')
    save_csv_to_postgresql(db_params, getenv("DB_PHARMACY_TABLE_NAME"), '../pharmacy_parse_result.csv')


if __name__ == "__main__":
    main()