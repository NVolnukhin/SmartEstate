services:
  db:
    image: postgres:14
    container_name: smart_estate_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      db:
        condition: service_healthy 
    restart: always

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: smart_estate_backend
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      ConnectionStrings__DefaultConnection: ${CONNECTION_STRING_DEFAULT}
      APPLY_MIGRATIONS: "true"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT}:8080"
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: smart_estate_frontend
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  pg_data:
